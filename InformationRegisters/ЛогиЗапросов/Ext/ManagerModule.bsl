
Процедура СоздатьЗаписьЛога(ВебЗапрос, СтрокаОтвета, Метод, ЛогируемыеМетоды, ДлительностьЗапроса, Ответ = Неопределено) Экспорт

	Попытка
		СтрокаЗапроса = ВебЗапрос.ПолучитьТелоКакСтроку();
		СтруктураЗапроса1 = КоннекторHTTP.JsonВОбъект(ВебЗапрос.ПолучитьТелоКакДвоичныеДанные(),,Новый Структура);		
		ТекМетод = СтруктураЗапроса1.Получить("method");
		Если ТекМетод <> Неопределено Тогда
			Метод = ТекМетод;
		КонецЕсли;
		
		ИдентификаторЗапроса = СтруктураЗапроса1.Получить("id");
		
		Если НужноЛогироватьМетод(Метод) Тогда
			Попытка
				зап = РегистрыСведений.ЛогиЗапросов.СоздатьМенеджерЗаписи();
				зап.Период = ТекущаяДата();
				зап.ИдентификаторЗапроса = ИдентификаторЗапроса;
				зап.ИмяМетода = Метод;
				зап.ПараметрыЗапроса = СтрокаЗапроса;
				зап.Ответ = СтрокаОтвета;
				зап.ДлительностьЗапроса = ДлительностьЗапроса;
					Если Ответ <> Неопределено Тогда 
						Попытка
							зап.КодСостояния = ?(ЗначениеЗаполнено(Ответ.КодСостояния), Ответ.КодСостояния, "");
							зап.ВремяПолученияОтветаПоЗапросу = ?(ЗначениеЗаполнено(Ответ.Заголовки.Получить("Date")), Ответ.Заголовки.Получить("Date"), "");
						Исключение
							зап.КодСостояния = "-";
							зап.ВремяПолученияОтветаПоЗапросу = "-";
						КонецПопытки;
					КонецЕсли;
				зап.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
	Исключение
	КонецПопытки
	
КонецПроцедуры

Функция НужноЛогироватьМетод(ИмяМетода) Экспорт
	
	КлючОбъекта  = "ОбработкаНастройкаИнтеграции";
	КлючНастроек = "ЛогированиеСервиса";
	
	ДанныеПонастройкамИнтеграции = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта, КлючНастроек);

	Если ДанныеПонастройкамИнтеграции <> Неопределено Тогда 
		Если ДанныеПонастройкамИнтеграции.Количество() > 0 Тогда
				Для Каждого СтрокаДанных Из ДанныеПонастройкамИнтеграции Цикл
					Если СтрокаДанных.Значение = ИмяМетода Тогда 
						Возврат Истина;
					КонецЕсли;
				КонецЦикла;
			  Возврат Ложь;
			//Индекс = ДанныеПонастройкамИнтеграции.Найти(ИмяМетода);
			//	Если Индекс <> Неопределено Тогда
			//		Возврат Истина;
			//	КонецЕсли;
		Иначе 
			Возврат Ложь;
		КонецЕсли;
	Иначе 
		Возврат Ложь;
	КонецЕсли;

КонецФункции

