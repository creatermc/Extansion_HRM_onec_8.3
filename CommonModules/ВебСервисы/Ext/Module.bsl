// Общий модуль для приема и передачи данных из внешних источников
#Область ПередачаИПолучениеДанныхПоФактическимДанным

// Передача и получение данных по фактическим данным экипажей рейсов
//
// Параметры:
//   Параметры - Структура - структура со свойствами:
//			* StartOfPeriod - Строка -  Дата начала периода.
//			* EndOfPeriod - Строка - Дата окончания периода.
//			* ListOfEmployees - Массив - массив данных по табельным номерам сотрудников.
//
//  Пример JSON пакета:
//
//{
// "jsonrpc": "2.0",
// "method": "get_employees_activity",
// "params": {
//  "StartOfPeriod": "2020-09-30T21:00:00Z",
//  "EndOfPeriod": "2020-10-30T21:00:00Z",
//  "ListOfEmployees": [
//   "0000-00001"
//  ]
// },
// "id": 1
//} 
//
Функция ПередачаДанныхЗапросаПоФактическимДанным(Параметры) Экспорт
	
	//НастройкиСервиса
	//УРЛАдресСервиса
	//Унифицированный адрес ресурса

	КлючОбъекта  = "ОбработкаНастройкаИнтеграции";
	КлючНастроек = "УРЛСервиса";
	
	ДанныеПонастройкамИнтеграции = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта, КлючНастроек);

	Если ДанныеПонастройкамИнтеграции <> Неопределено Тогда 
		Если ДанныеПонастройкамИнтеграции.Количество() > 0 Тогда 
			ПредURL = ?(ДанныеПонастройкамИнтеграции.Количество() >= 1, ДанныеПонастройкамИнтеграции[0], "");
			ИмяПользователя = ?(ДанныеПонастройкамИнтеграции.Количество() >= 2, ДанныеПонастройкамИнтеграции[1], "");
			Пароль = ?(ДанныеПонастройкамИнтеграции.Количество() >= 3, ДанныеПонастройкамИнтеграции[2], "");
		КонецЕсли;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;

	ПредURL = ?(Прав(ПредURL, (СтрДлина(ПредURL) - (СтрДлина(ПредURL)-1))) = "/", Лев(ПредURL, СтрДлина(ПредURL)-1), ПредURL);
	Адрес = ПредURL + "/hs/rpc";
	МетодЗапроса = "get_employees_activity";
	//          *Тип - Строка - тип аутентификации. Допустимые значения: Digest, Basic. Для Basic Тип можно не указывать.
	//          *Пользователь - Строка - имя пользователя.
	//          *Пароль - Строка - пароль пользователя.
	//          *ИспользоватьАутентификациюОС - Булево - включает использование аутентификации NTLM или Negotiate.
		ПараметрыАутентификации = Новый Структура;
			ПараметрыАутентификации.Вставить("Тип", "Basic");
			ПараметрыАутентификации.Вставить("Пользователь", ИмяПользователя);
			ПараметрыАутентификации.Вставить("Пароль", Пароль);
			ПараметрыАутентификации.Вставить("ИспользоватьАутентификациюОС", Ложь);
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("Аутентификация", ПараметрыАутентификации);

		Запрос = JSONRPC.НовыйЗапрос(МетодЗапроса, Параметры);
		РезультатЗапроса = КоннекторHTTP.PostJson(Адрес, Запрос, ДопПараметры); 

	Если ТипЗнч(РезультатЗапроса) = Тип("Соответствие") Тогда
		Результат = РезультатЗапроса.Получить("result");
		Если Результат = Неопределено Тогда
			Результат = JSONRPC.ОписаниеJSONRPCОшибки(РезультатЗапроса["error"]);  
		КонецЕсли;
	Иначе
		Результат = РезультатЗапроса;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

